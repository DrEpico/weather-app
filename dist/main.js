(()=>{"use strict";let e;document.querySelector("body"),document.querySelector("body");const t=document.querySelector("body");!function(t){let n=document.createElement("div");n.id="mainPane";let d=document.createElement("div");d.id="currentWeather";let o=document.createElement("div");o.id="search",function(t){let n=document.createElement("div"),d=document.createElement("input"),o=document.createElement("button");o.textContent="Search",n.appendChild(d),n.appendChild(o),t.appendChild(n),o.addEventListener("click",(async function(){let t=d.value.trim();await async function(t){try{const n=await fetch(`http://api.weatherapi.com/v1/forecast.json?key=195157837b034a1d883103942240706&q=${t}&days=3&aqi=yes&alerts=yes`,{mode:"cors"});e=await n.json(),console.log(e)}catch(e){console.error("An error occurred:",e)}}(t),function(t){let n,d,o;if(e.current){n=document.createElement("span"),d=document.createElement("span"),o=document.createElement("span");let t=e.current.condition.text,c=e.current.temp_c,a=e.current.is_day;n.textContent=t,d.textContent=c,o.textContent=a;let r=document.querySelector("#currentWeather");r.appendChild(n),r.appendChild(d),r.appendChild(o)}else console.log("No data found for the search keyword.")}(),async function(t){if(e.current)for(let t=0;t<3;t++)console.log(e.forecast.forecastday[t].day.condition.text),console.log(e.forecast.forecastday[t].day.avgtemp_c);else console.log("No data found for the search keyword.")}(),function(t){if(e.current){let t=e.current.wind_kph,n=e.current.wind_dir;document.querySelector("#wind").textContent=t+" "+n;let d=e.current.precip_mm,o=e.forecast.forecastday[0].day.totalprecip_mm;document.querySelector("#precipitation").textContent=d+" "+o;let c=e.current.humidity;document.querySelector("#humidity").textContent=c;let a=e.current.uv;document.querySelector("#uv").textContent=a;let r=e.forecast.forecastday[0].day.maxtemp_c,i=e.forecast.forecastday[0].day.avgtemp_c,l=e.forecast.forecastday[0].day.mintemp_c;document.querySelector("#tempreture").textContent=r+" "+i+" "+l;let u=e.forecast.forecastday[0].astro.sunrise,s=e.forecast.forecastday[0].astro.sunset;document.querySelector("#astro1").textContent=u+" "+s}else console.log("No data found for the search keyword.")}()}))}(o);let c=document.createElement("div");c.id="animation";let a=document.createElement("div");a.id="forecast";let r=document.createElement("div"),i=document.createElement("div"),l=document.createElement("div");r.classList.add("day"),r.id="day1",i.classList.add("day"),i.id="day2",l.classList.add("day"),l.id="day3",a.appendChild(r),a.appendChild(i),a.appendChild(l),n.appendChild(d),n.appendChild(o),n.appendChild(c),n.appendChild(a),t.appendChild(n)}(t),function(e){let t=document.createElement("div");t.id="details";let n=document.createElement("div");n.id="info",["wind","humidity","precipitation","pressure","tempreture","uv","astro1","astro2","astro3"].forEach((e=>{let t=document.createElement("div");t.id=e,n.appendChild(t)}));let d=document.createElement("div");d.id="hourly";for(let e=1;e<=10;e++){let e=document.createElement("div");e.classList.add("hour"),d.appendChild(e)}t.appendChild(n),t.appendChild(d),e.appendChild(t)}(t)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,