(()=>{"use strict";const e=document.querySelector("body"),t=document.querySelector("body"),d=document.querySelector("body");!function(d){let n=document.createElement("div");n.id="mainPane";let a=document.createElement("div");a.id="currentWeather";let c=document.createElement("div");c.id="search",function(d){let n=document.createElement("form"),a=document.createElement("input"),c=document.createElement("button");c.textContent="Search",n.appendChild(a),n.appendChild(c),d.appendChild(n),c.addEventListener("click",(function(d){d.preventDefault(),a.value.trim(),async function(t){let d,n,a;try{const c=await fetch(`http://api.weatherapi.com/v1/forecast.json?key=195157837b034a1d883103942240706&q=${t}&days=1&aqi=yes&alerts=yes`,{mode:"cors"}),i=await c.json();if(i.current){d=document.createElement("span"),n=document.createElement("span"),a=document.createElement("span");let t=i.current.condition.text,c=i.current.tempC,o=i.current.is_day;d.textContent=t,n.textContent=c,a.textContent=o,e.appendChild(d),e.appendChild(n),e.appendChild(a)}else console.log("No data found for the search keyword.")}catch(e){console.error("An error occurred:",e)}}(t)}))}(c);let i=document.createElement("div");i.id="animation";let o=document.createElement("div");o.id="forecast";let l=document.createElement("div"),r=document.createElement("div"),p=document.createElement("div");l.classList.add("day"),l.id="day1",r.classList.add("day"),r.id="day2",p.classList.add("day"),p.id="day3",o.appendChild(l),o.appendChild(r),o.appendChild(p),n.appendChild(a),n.appendChild(c),n.appendChild(i),n.appendChild(o),d.appendChild(n)}(d),function(e){let t=document.createElement("div");t.id="details";let d=document.createElement("div");d.id="info",["wind","humidity","precipitation","pressure","feelsLike","uv","astro1","astro2","astro3"].forEach((e=>{let t=document.createElement("div");t.id=e,d.appendChild(t)}));let n=document.createElement("div");n.id="hourly";for(let e=1;e<=10;e++){let e=document.createElement("div");e.classList.add("hour"),n.appendChild(e)}t.appendChild(d),t.appendChild(n),e.appendChild(t)}(d)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,